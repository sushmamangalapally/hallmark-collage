{"version":3,"sources":["apiKeys.js","assetsList.js","Collage.js","Photo.js","Photos.js","LoadFont.js","Dropdown.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fontsStyleList","roboto","fontColorsList","id","value","backgroundColorsList","getFonts","alignmentObj","top","center","bottom","alignment","Collage","photo","pictures","updatePhotosSearch","text","fontFam","gBackgroundColor","fontColor","placement","updateFont","updateText","allowDrop","event","preventDefault","drop","console","log","document","getElementById","data","dataTransfer","getData","img","undefined","clientWidth","clientHeight","indexOf","target","getAttribute","style","backgroundImage","border","alert","className","background","opacity","onChange","fontFamily","color","fontSize","Array","map","val","index","key","onDrop","onDragOver","margin","width","onClick","getCanvas","domtoimage","toJpeg","quality","then","dataUrl","link","createElement","download","href","click","Photo","useState","pictureClicked","setPictureClicked","pictureLeft","pictureRight","src","draggable","onDragStart","setData","alt","alt_description","currentTarget","onMouseDown","onMouseMove","left","pageX","right","onMouseUp","Photos","noPictures","searchTerm","loadMore","borderRadius","length","pic","class","LoadFont","fonts","font","weights","subsets","Dropdown","title","subTitle","updateFunction","array","category","ulId","tabIndex","ele","role","aria-selected","data-value","backgroundColor","Search","setPictures","query","setQuery","setNoError","setText","setGBackgroundColor","setFontColor","setPlacement","setFontFam","setNoPictures","page","setPage","callAPI","queryText","axios","get","apiConfig","unsplashAPIKey","response","results","jsonData","pictureObj","picturesArr","picture","concat","filter","v","i","a","findIndex","t","error","useEffect","getElementsByClassName","htmlFor","name","type","e","placeholder","assetsList","handleChange","lastImagePlacement","querySelectorAll","totalImagesLoaded","scrollIntoView","behavior","block","inline","currentPictures","currIndex","splice","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gFAAAA,EAAOC,QAAU,CACb,eAAkB,qE,8FCmItBD,EAAOC,QAAU,CACbC,eAtHmB,CACnBC,OAAQ,SACR,aAAc,aACd,QAAW,UACX,KAAQ,OACR,cAAe,cACf,eAAgB,eAChB,iBAAkB,iBAClB,qBAAsB,qBACtB,YAAa,YACb,MAAS,QACT,YAAa,YACb,mBAAoB,oBA2GpBC,eApCmB,CACnB,CAACC,GAAI,MAAOC,MAAO,WACnB,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,SAAUC,MAAO,WACtB,CAACD,GAAI,cAAeC,MAAO,WAC3B,CAACD,GAAI,SAAUC,MAAO,WACtB,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,aAAcC,MAAO,WAC1B,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,QAASC,MAAO,WACrB,CAACD,GAAI,cAAeC,MAAO,WAC3B,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,SAAUC,MAAO,WACtB,CAACD,GAAI,QAASC,MAAO,WACrB,CAACD,GAAI,SAAUC,MAAO,WACtB,CAACD,GAAI,cAAeC,MAAO,WAC3B,CAACD,GAAI,QAASC,MAAO,WACrB,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,YAAaC,MAAO,YAkBzBC,qBAlFyB,CACzB,CAACF,GAAI,MAAOC,MAAO,WACnB,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,SAAUC,MAAO,WACtB,CAACD,GAAI,cAAeC,MAAO,WAC3B,CAACD,GAAI,SAAUC,MAAO,WACtB,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,aAAcC,MAAO,WAC1B,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,QAASC,MAAO,WACrB,CAACD,GAAI,cAAeC,MAAO,WAC3B,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,SAAUC,MAAO,WACtB,CAACD,GAAI,QAASC,MAAO,WACrB,CAACD,GAAI,SAAUC,MAAO,WACtB,CAACD,GAAI,cAAeC,MAAO,WAC3B,CAACD,GAAI,QAASC,MAAO,WACrB,CAACD,GAAI,OAAQC,MAAO,WACpB,CAACD,GAAI,YAAaC,MAAO,WACzB,CAACD,GAAI,QAASC,MAAO,YA+DrBE,SAxIa,CACb,CAACH,GAAI,SAAUC,MAAO,UACtB,CAACD,GAAI,aAAcC,MAAO,cAC1B,CAACD,GAAI,UAAWC,MAAO,WACvB,CAACD,GAAI,OAAQC,MAAO,QACpB,CAACD,GAAI,cAAeC,MAAO,eAC3B,CAACD,GAAI,eAAgBC,MAAO,gBAC5B,CAACD,GAAI,iBAAkBC,MAAO,kBAC9B,CAACD,GAAI,qBAAsBC,MAAO,sBAClC,CAACD,GAAI,YAAaC,MAAO,aACzB,CAACD,GAAI,QAASC,MAAO,SACrB,CAACD,GAAI,YAAaC,MAAO,aACzB,CAACD,GAAI,mBAAoBC,MAAO,qBA6HhCG,aAjBiB,CACjBC,IAAK,wBACLC,OAAQ,2BACRC,OAAQ,4BAeRC,UAZc,CACd,CAACR,GAAI,MAAOC,MAAO,yBACnB,CAACD,GAAI,SAAUC,MAAO,4BACtB,CAACD,GAAI,SAAUC,MAAO,+B,mICwDXQ,EAtLC,SAAC,GAWX,EAVFC,MAUE,EATFC,SASG,IARHC,EAQE,EARFA,mBACAC,EAOE,EAPFA,KACAC,EAME,EANFA,QACAC,EAKE,EALFA,iBACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,UAEAC,GACE,EAFFC,WAEE,EADFD,YAMA,IAAME,EAAY,SAACC,GACfA,EAAMC,kBAGJC,EAAO,SAACF,GACVG,QAAQC,IAAIC,SAASC,eAAeC,IAUpCP,EAAMC,iBAEN,IAAIM,EAAOP,EAAMQ,aAAaC,QAAQ,QAElCC,OAAMC,EACV,GACIN,SAASC,eAAeC,GAAMK,aAC1BP,SAASC,eAAeC,GAAMM,eACS,IAT5B,CAAC,QAAS,SASZC,QAAQd,EAAMe,OAAOpC,IAElC+B,EAAML,SAASC,eAAeC,GAAMS,aAAa,OACjDhB,EAAMe,OAAOE,MAAMC,gBAAkB,OAASR,EAAM,IACpDL,SAASC,eAAeN,EAAMe,OAAOpC,IAAIsC,MAAME,OAC3C,sBACJ5B,EAAmBgB,OAChB,MACHF,SAASC,eAAeC,GAAMM,cAC1BR,SAASC,eAAeC,GAAMK,cACY,IA3B5B,CAClB,QACA,QACA,QACA,QACA,QACA,SAqBgBE,QAAQd,EAAMe,OAAOpC,KAYrC,OADAyC,MAAM,uDACC,EAVPV,EAAML,SAASC,eAAeC,GAAMS,aAAa,OAEjDhB,EAAMe,OAAOE,MAAMC,gBAAkB,OAASR,EAAM,IAEpDL,SAASC,eAAeN,EAAMe,OAAOpC,IAAIsC,MAAME,OAC3C,sBAEJ5B,EAAmBgB,KAyB3B,OACI,yBAAKc,UAAU,aACX,yBACI1C,GAAG,cACH0C,UAAW3B,EAAmB,aAC9BuB,MAAO,CAAEK,WAAY5B,EAAkB6B,QAAS,KAEjC,QAAd3B,EACG,yBAAKyB,UAAU,aACX,wBACIG,SAAuB3B,EACvBoB,MAAO,CACHQ,WAAYhC,EACZiC,MAAO/B,EACPgC,SAAU,SAEdN,UAAU,iBAET7B,IAIT,GAEJ,yBAAK6B,UAAU,WACV,YAAIO,MAAM,IAAIC,KAAI,SAACC,EAAKC,GACrB,OACI,4BACIC,IAAKD,EACLpD,GAAE,cAASoD,EAAQ,GACnBV,UAAS,uCACLU,EAAQ,GAEZE,OAAQ/B,EACRgC,WAAYnC,OAIT,WAAdH,EACG,yBACIyB,UAAU,wDACVJ,MAAO,CAAEkB,OAAQ,OAAQC,MAAO,QAEhC,wBACIZ,SAAuB3B,EACvBoB,MAAO,CACHQ,WAAYhC,EACZiC,MAAO/B,EACPgC,SAAU,SAEdN,UAAU,0CAET7B,IAIT,4BACIb,GAAG,QACH0C,UAAU,iCACVY,OAAQ/B,EACRgC,WAAYnC,IAInB,CAAC,EAAG,EAAG,GAAG8B,KAAI,SAACC,EAAKC,GACjB,OACI,4BACIC,IAAKF,EACLnD,GAAE,cAASmD,GACXT,UAAS,uCAAkCS,GAC3CG,OAAQ/B,EACRgC,WAAYnC,QAKb,WAAdH,EACG,yBAAKyB,UAAU,gBACX,wBACIG,SAAuB3B,EACvBoB,MAAO,CACHQ,WAAYhC,EACZiC,MAAO/B,EACPgC,SAAU,SAEdN,UAAU,iBAET7B,IAIT,IAGR,4BAAQ6B,UAAU,aAAagB,QA3GnB,WAChB,IAAIC,EAAYjC,SAASC,eAAe,eAExCiC,IACKC,OAAOF,EAAW,CAAEG,QAAS,MAC7BC,MAAK,SAAUC,GACZ,IAAIC,EAAOvC,SAASwC,cAAc,KAClCD,EAAKE,SAAW,qBAChBF,EAAKG,KAAOJ,EACZC,EAAKI,aAkGT,kB,OCjIGC,EAjDD,SAAC,GAAa,IAAZ5D,EAAW,EAAXA,MAAW,EACmB6D,oBAAS,GAD5B,mBAClBC,EADkB,KACFC,EADE,OAEaF,mBAAS,GAFtB,mBAElBG,EAFkB,aAGeH,mBAAS,IAHxB,mBAGlBI,EAHkB,UA+BvB,OACE,yBACEjC,UAAU,cACVW,IAAK3C,EAAK,GACVV,GAAIU,EAAK,GACTkE,IAAKlE,EAAK,KAAL,MACLmE,UAAU,OACVC,YAjCO,SAAAzD,GACXG,QAAQC,IAAI,QACZD,QAAQC,IAAIJ,GACZA,EAAMQ,aAAakD,QAAQ,OAAQ1D,EAAMe,OAAOpC,KA+B5CgF,IAAKtE,EAAMuE,gBACXvB,QA9Ba,SAAArC,GACjBG,QAAQC,IAAIJ,GACZoD,GAAkB,GACjBpD,EAAM6D,cAAcxC,WAAa,WA4B9ByC,YA1BY,SAAA9D,GAChBoD,GAAkB,IA0BdW,YAxBY,SAAA/D,IACO,IAAnBmD,IACFhD,QAAQC,IAAI,aACZD,QAAQC,IAAIJ,GACZA,EAAM6D,cAAc5C,MAAM+C,KAAOhE,EAAMiE,MAAQZ,EAC/CrD,EAAM6D,cAAc5C,MAAMiD,MAAQlE,EAAMiE,MAAQX,IAoB9Ca,UAfU,SAAAnE,GACdoD,GAAkB,OCHPgB,EAzBA,SAAC,GAAkD,IAAjD9E,EAAgD,EAAhDA,SAAU+E,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WAA0B,EAAdC,SAG/C,OAFApE,QAAQC,IAAId,GACZa,QAAQC,IAAIkE,GAEV,yBACEjD,UAAU,6CACVJ,MAAO,CAAGkB,OAAQ,UAAWqC,aAAc,QAGxClF,GAAYA,EAASmF,OAAS,EAC7B,6BACGnF,EAASuC,KAAI,SAAC6C,EAAK3C,GAAN,OACZ,kBAAC,EAAD,CAAOC,IAAK0C,EAAI/F,GAAGoD,EAAO1C,MAAOqF,EAAKpF,SAAUA,QAKtD,4BAAK+E,GAAcC,EAAWG,OAAS,wBAAyBH,EAAa,mBAE/E,yBAAKK,MAAM,Y,iBCyCJC,EA1DE,kBACf,oCACM,kBAAC,IAAD,CACEC,MAAO,CACL,CACEC,KAAM,SACNC,QAAS,CAAC,IAAK,SAEjB,CACED,KAAM,aACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,UACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,OACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,cACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,eACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,iBACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,qBACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,YACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,QACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,YACNC,QAAS,CAAC,IAAK,MAEjB,CACED,KAAM,mBACNC,QAAS,CAAC,IAAK,OAGnBC,QAAS,CAAC,eAAgB,a,iBCArBC,MAvDf,YAA4E,EAAzDC,MAA0D,IAAnDC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,KAMnE,OAJEpF,QAAQC,IAAIgF,GAEZjF,QAAQC,IAAIiF,GAGZ,yBAAKhE,UAAU,OAEX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,uCACX,uBACI0B,KAAK,IACL1B,UAAU,sBACVmE,SAAS,KAERL,EACD,uBAAG9D,UAAU,qBAEjB,wBACI1C,GAAI4G,EACJlE,UAAU,yBAGVgE,EAAMxD,KAAI,SAAC4D,GAAD,OACN,wBACIC,KAAK,SACLC,gBAAc,OACdtD,QAAS+C,EACTzG,GAAI8G,EAAI9G,GACRqD,IAAKyD,EAAI9G,GACTiH,aAAYH,EAAI7G,MAChByC,UAAU,YACVJ,MAAO,CACHQ,WACmB,SAAb6D,EAAuBG,EAAI7G,MAAQ,eAAiB,GAE1DiH,gBAAgC,eAAbP,EAA6BG,EAAI7G,MAAQ,KAGhE,yBAAKyC,UAAU,aACX,uBAAG0B,KAAK,cACY,SAAbuC,EAAuBG,EAAI7G,MAAQ6G,EAAI9G,c,iCCkN/DmH,MApPf,WAAmB,IAAD,EACkB5C,mBAAS,IAD3B,mBACP5D,EADO,KACGyG,EADH,OAEY7C,mBAAS,IAFrB,mBAEP8C,EAFO,KAEAC,EAFA,OAGgB/C,oBAAS,GAHzB,mBAGEgD,GAHF,aAIUhD,mBAAS,IAJnB,mBAIP1D,EAJO,KAID2G,EAJC,OAKkCjD,mBAAS,aAL3C,mBAKPxD,EALO,KAKW0G,EALX,OAMoBlD,mBAAS,QAN7B,mBAMPvD,EANO,KAMI0G,EANJ,OAOoBnD,mBAAS,OAP7B,mBAOPtD,EAPO,KAOI0G,EAPJ,OAQgBpD,mBAAS,IARzB,mBAQPzD,EARO,KAQE8G,EARF,OASsBrD,oBAAS,GAT/B,mBASPmB,EATO,KASKmC,EATL,OAUUtD,mBAAS,GAVnB,mBAUPuD,EAVO,KAUDC,EAVC,KAaRC,EAAU,SAACF,EAAMG,GACnBC,IACKC,IADL,uDAEwDL,EAFxD,sBAE0EM,IAAUC,eAFpF,kBAE4GJ,IAEvGlE,MAAK,SAACuE,GAEH,OADA9G,QAAQC,IAAI6G,GACLA,EAAS1G,KAAK2G,WAExBxE,MACG,SAACyE,GACGhH,QAAQC,IAAI+G,GACZ,IAAIC,EAAaD,EACbE,EAAcF,EAAStF,KAAI,SAACyF,GAC5B,OAAOA,EAAO,KAAP,SAEXnH,QAAQC,IAAIiH,GACZtB,EAAsB,IAATU,GAAcT,IAAUY,EAAatH,EAASiI,OAAOH,GAAYI,QAAO,SAACC,EAAEC,EAAEC,GAAL,OAASA,EAAEC,WAAU,SAAAC,GAAC,OAAGA,EAAElJ,KAAO8I,EAAE9I,QAAO+I,KAAKN,GACrIlB,GAAW,GACgB,IAAvBmB,EAAY5C,SACd+B,GAAc,GACdP,EAASW,IAEXX,EAASW,MAEb,SAACkB,GACOA,IACA1G,MAAM,WACNA,MAAM,0CACN2E,EAAY,IACZG,GAAW,GACXM,GAAc,QA5CpB,4CAkDd,WAA4BR,GAA5B,SAAA2B,EAAA,sDACQ3B,GACAU,EAAQ,GACRC,EAAQF,EAAMT,KAEdD,EAAY,IACZE,EAASD,GACTE,GAAW,IAPnB,4CAlDc,sBA6Dd,IAAMpG,GAAa,SAACN,GAChB,GAAIA,EAAKiF,OAAS,GAGd,OAFAtE,QAAQC,IAAIZ,EAAKiF,QACjBrD,MAAM,wCACC,EAEX+E,EAAQ3G,IAGNK,GAAa,SAACG,GAChBG,QAAQC,IAAI,cACZJ,EAAMC,iBACNE,QAAQC,IAAIJ,EAAM6D,cAAclF,IAChCwB,QAAQC,IAAIJ,EAAM6D,cAAc7C,aAAa,eAC7CuF,EAAWvG,EAAM6D,cAAc7C,aAAa,gBA4EhD,OAhCA+G,qBAAU,WAEY,WAAdnI,QACsDe,IAAtDN,SAAS2H,uBAAuB,eAAe,KAE/C3H,SAAS2H,uBACL,eACF,GAAG/G,MAAMC,gBAAkB,IAEjCf,QAAQC,IAAI,cACZD,QAAQC,IAAId,KACb,IAsBC,yBAAK+B,UAAU,YACX,kBAAC,EAAD,MACA,uBAAGA,UAAU,iBAAb,oDACA,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,oBAAoB4G,QAAQ,iBACzC,2CAEJ,2BACItJ,GAAG,gBACHuJ,KAAK,gBACLC,KAAK,OACL9G,UAAU,sBACVzC,MAAOY,EACPgC,SAAU,SAAC4G,GAAD,OAAOtI,GAAWsI,EAAErH,OAAOnC,QACrCyJ,YAAY,qBAIxB,kBAAC,EAAD,CACEnD,MAAM,0BACNC,SAAS,iBACTC,eAnFM,SAACpF,GACrBG,QAAQC,IAAI,mBACZJ,EAAMC,iBACNE,QAAQC,IAAIJ,EAAM6D,cAAclF,IAChC2H,EAAatG,EAAM6D,cAAclF,KAgFnB0G,MAAOiD,IAAWnJ,UAClBoG,KAAK,YACLD,SAAS,SAGX,kBAAC,EAAD,CACEJ,MAAM,wBACNC,SAAS,aACTC,eAAgBvF,GAChBwF,MAAOiD,IAAWxJ,SAClBwG,SAAS,OACTC,KAAK,cAGP,kBAAC,EAAD,CACEL,MAAM,wBACNC,SAAS,aACTC,eA5GM,SAACpF,GACrBG,QAAQC,IAAI,mBACZJ,EAAMC,iBACNE,QAAQC,IAAIJ,EAAM6D,cAAclF,IAChC0H,EAAarG,EAAM6D,cAAc7C,aAAa,gBAyGhCqE,MAAOiD,IAAW5J,eAClB4G,SAAS,aACTC,KAAK,cAGP,kBAAC,EAAD,CACEL,MAAM,8BACNC,SAAS,mBACTC,eA7HY,SAACpF,GAC3BG,QAAQC,IAAI,yBACZJ,EAAMC,iBACNE,QAAQC,IAAIJ,EAAM6D,cAAclF,IAChCwB,QAAQC,IAAIV,GACZ0G,EAAoBpG,EAAM6D,cAAc7C,aAAa,gBAyHvCqE,MAAOiD,IAAWzJ,qBAClByG,SAAS,aACTC,KAAK,cAGP,yBAAKlE,UAAU,yCACX,2BAAOA,UAAU,oBAAoB4G,QAAQ,sBACzC,2CADJ,kDAII,6BAJJ,kCAMI,8BAEJ,2BACIE,KAAK,OACL3G,SAAU,SAAC4G,GAAD,OA5NpB,2CA4N2BG,CAAaH,EAAErH,OAAOnC,QACvCyJ,YAAY,kBACZhH,UAAU,aACV1C,GAAG,yBAKf,kBAAC,EAAD,CAAQW,SAAUA,EAAUgF,WAAY0B,EAAO3B,WAAYA,EAAYE,SAhIlE,WAIbmC,EAAQD,EAAK,GAGb,IACM+B,EADUnI,SAASoI,iBAAiB,0BACPhE,OAAO,EAC1CkC,EAAQF,EAAK,EAAGT,GAKhB,IAAM0C,EAAoBrI,SAASoI,iBAAiB,0BACpDtI,QAAQC,IAAIsI,EAAkBF,IAC9BE,EAAkBF,GAAoBG,eAAe,CAACC,SAAU,SAAUC,MAAO,MAAOC,OAAQ,gBAkH5F,kBAAC,EAAD,CACIvJ,mBAnGZ,SAA4BF,GACxBc,QAAQC,IAAIf,GACZc,QAAQC,IAAId,GACZ,IAAMyJ,EAAe,YAAOzJ,GAC5Ba,QAAQC,IAAI2I,GAGRA,EAAgBlH,KAAI,SAACyF,EAAS0B,GAC1B,OAAI1B,EAAQ3I,KAAOU,EACR0J,EAAgBE,OAAOD,EAAW,GAEtC,QAKfjD,EAAYgD,IAoFJvJ,KAAMA,EACNC,QAASA,EACTC,iBAAkBA,EAClBC,UAAWA,EACXC,UAAWA,EACXE,WAAYA,GACZD,WAAYA,O,MChObqJ,MApBf,WAEE,OACI,yBAAK7H,UAAU,OACb,4BAAQA,UAAU,UAChB,6BAASA,UAAU,mBAGnB,6BAASA,UAAU,iBAAnB,8BAOF,kBAAC,EAAD,QCRY8H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASpJ,SAASC,eAAe,SD2H3C,kBAAmBoJ,WACrBA,UAAUC,cAAcC,MAAMlH,MAAK,SAAAmH,GACjCA,EAAaC,kB","file":"static/js/main.5c4fda1f.chunk.js","sourcesContent":["module.exports = {\n    \"unsplashAPIKey\": \"b6100f8fd2a15cfd6e7bab74d65a17e3cb4e8b6f3276e73e9dbb2b580ef1b44b\",\n}","const getFonts = [\n    {id: 'roboto', value: 'Roboto'},\n    {id: 'fjalla-one', value: 'Fjalla One'},\n    {id: 'lobster', value: 'Lobster'},\n    {id: 'abel', value: 'Abel'},\n    {id: 'fredoka-one', value: 'Fredoka One'},\n    {id: 'varela-round', value: 'Varela Round'},\n    {id: 'dancing-script', value: 'Dancing Script'},\n    {id: 'shadows-into-light', value: 'Shadows Into Light'},\n    {id: 'amatic-sc', value: 'Amatic SC'},\n    {id: 'amiri', value: 'Amiri'},\n    {id: 'patua-one', value: 'Patua One'},\n    {id: 'permanent-marker', value: 'Permanent Marker'},\n];\n\nconst fontsStyleList = {\n    roboto: 'Roboto',\n    'fjalla-one': 'Fjalla One',\n    'lobster': 'Lobster',\n    'abel': 'Abel',\n    'fredoka-one': 'Fredoka One',\n    'varela-round': 'Varela Round',\n    'dancing-script': 'Dancing Script',\n    'shadows-into-light': 'Shadows Into Light',\n    'amatic-sc': 'Amatic SC',\n    'amiri': 'Amiri',\n    'patua-one': 'Patua One',\n    'permanent-marker': 'Permanent Marker',\n}\n\nconst backgroundColorsListObj = {\n    red: \"#ef9a9a\",\n    pink: \"#f48fb1\",\n    purple: \"#ce93d8\",\n    \"deep-purple\": \"#b39ddb\",\n    indigo: \"#9fa8da\",\n    blue: \"#90caf9\",\n    \"light-blue\": \"#81d4fa\",\n    cyan: \"#80deea\",\n    teal: \"#80cbc4\",\n    green: \"#a5d6a7\",\n    \"light-green\": \"#c5e1a5\",\n    lime: \"#e6ee9c\",\n    yellow: \"#fff59d\",\n    amber: \"#ffe082\",\n    orange: \"#ffcc80\",\n    \"deep-orange\": \"#ffab91\",\n    brown: \"#bcaaa4\",\n    grey: \"#eeeeee\",\n    \"blue-grey\": \"#b0bec5\",\n    white: \"#f5f5f5\"\n};\n\nconst backgroundColorsList = [\n    {id: 'red', value: '#ef9a9a'},\n    {id: 'pink', value: '#f48fb1'},\n    {id: 'purple', value: '#ce93d8'},\n    {id: 'deep-purple', value: '#b39ddb'},\n    {id: 'indigo', value: '#9fa8da'},\n    {id: 'blue', value: '#90caf9'},\n    {id: 'light-blue', value: '#81d4fa'},\n    {id: 'cyan', value: '#80deea'},\n    {id: 'teal', value: '#80cbc4'},\n    {id: 'green', value: '#80deea'},\n    {id: 'light-green', value: '#c5e1a5'},\n    {id: 'lime', value: '#e6ee9c'},\n    {id: 'yellow', value: '#fff59d'},\n    {id: 'amber', value: '#ffe082'},\n    {id: 'orange', value: '#ffcc80'},\n    {id: 'deep-orange', value: '#ffab91'},\n    {id: 'brown', value: '#bcaaa4'},\n    {id: 'grey', value: '#eeeeee'},\n    {id: 'blue-grey', value: '#b0bec5'},\n    {id: 'white', value: '#f5f5f5'},\n];\n\nconst fontColorsListObj = {\n    red: \"#e57373\",\n    pink: \"#f06292\",\n    purple: \"#ba68c8\",\n    \"deep-purple\": \"#9575cd\",\n    indigo: \"#7986cb\",\n    blue: \"#64b5f6\",\n    \"light-blue\": \"#4fc3f7\",\n    cyan: \"#4dd0e1\",\n    teal: \"#4db6ac\",\n    green: \"#81c784\",\n    \"light-green\": \"#aed581\",\n    lime: \"#dce775\",\n    yellow: \"#fff176\",\n    amber: \"#ffd54f\",\n    orange: \"#ffb74d\",\n    \"deep-orange\": \"#ff8a65\",\n    brown: \"#a1887f\",\n    grey: \"#e0e0e0\",\n    \"blue-grey\": \"#90a4ae\"\n};\n\nconst fontColorsList = [\n    {id: 'red', value: '#e57373'},\n    {id: 'pink', value: '#f06292'},\n    {id: 'purple', value: '#ba68c8'},\n    {id: 'deep-purple', value: '#9575cd'},\n    {id: 'indigo', value: '#7986cb'},\n    {id: 'blue', value: '#64b5f6'},\n    {id: 'light-blue', value: '#4fc3f7'},\n    {id: 'cyan', value: '#4dd0e1'},\n    {id: 'teal', value: '#4db6ac'},\n    {id: 'green', value: '#81c784'},\n    {id: 'light-green', value: '#aed581'},\n    {id: 'lime', value: '#dce775'},\n    {id: 'yellow', value: '#fff176'},\n    {id: 'amber', value: '#ffd54f'},\n    {id: 'orange', value: '#ffb74d'},\n    {id: 'deep-orange', value: '#ff8a65'},\n    {id: 'brown', value: '#a1887f'},\n    {id: 'grey', value: '#e0e0e0'},\n    {id: 'blue-grey', value: '#90a4ae'},\n];\n\nconst alignmentObj = {\n    top: 'Place text on the top',\n    center: 'Place text in the center',\n    bottom: 'Place text on the bottom'\n}\n\nconst alignment = [\n    {id: 'top', value: 'Place text on the top'},\n    {id: 'center', value: 'Place text in the center'},\n    {id: 'bottom', value: 'Place text on the bottom'}\n]\n\nmodule.exports = {\n    fontsStyleList: fontsStyleList,\n    fontColorsList: fontColorsList,\n    backgroundColorsList: backgroundColorsList,\n    getFonts: getFonts,\n    alignmentObj: alignmentObj,\n    alignment: alignment\n}","import React, { Component } from \"react\";\nimport domtoimage from \"dom-to-image\";\n\nconst Collage = ({\n    photo,\n    pictures,\n    updatePhotosSearch,\n    text,\n    fontFam,\n    gBackgroundColor,\n    fontColor,\n    placement,\n    updateText,\n    updateFont,\n}) => {\n    async function handleSubmit(event) {\n        event.preventDefault();\n    }\n\n    const allowDrop = (event) => {\n        event.preventDefault();\n    };\n\n    const drop = (event) => {\n        console.log(document.getElementById(data));\n        var horizontallGrid = [\n            \"drag1\",\n            \"drag2\",\n            \"drag4\",\n            \"drag5\",\n            \"drag6\",\n            \"drag7\",\n        ];\n        var verticalGrid = [\"drag3\", \"drag8\"];\n        event.preventDefault();\n\n        var data = event.dataTransfer.getData(\"text\");\n\n        var img = undefined;\n        if (\n            document.getElementById(data).clientWidth <=\n                document.getElementById(data).clientHeight &&\n            verticalGrid.indexOf(event.target.id) !== -1\n        ) {\n            img = document.getElementById(data).getAttribute(\"src\");\n            event.target.style.backgroundImage = \"url(\" + img + \")\";\n            document.getElementById(event.target.id).style.border =\n                \"3px solid #00000000\";\n            updatePhotosSearch(data);\n        } else if (\n            document.getElementById(data).clientHeight <=\n                document.getElementById(data).clientWidth &&\n            horizontallGrid.indexOf(event.target.id) !== -1\n        ) {\n            img = document.getElementById(data).getAttribute(\"src\");\n\n            event.target.style.backgroundImage = \"url(\" + img + \")\";\n\n            document.getElementById(event.target.id).style.border =\n                \"3px solid #00000000\";\n\n            updatePhotosSearch(data);\n        } else {\n            alert(\"You must match picture according height and width!\");\n            return false;\n        }\n    };\n\n    const handleUpdatePhotosSearch = (event) => {\n        console.log(event);\n        updatePhotosSearch();\n    };\n\n    const saveCollage = () => {\n        var getCanvas = document.getElementById(\"saveCollage\");\n\n        domtoimage\n            .toJpeg(getCanvas, { quality: 0.95 })\n            .then(function (dataUrl) {\n                var link = document.createElement(\"a\");\n                link.download = \"my-image-name.jpeg\";\n                link.href = dataUrl;\n                link.click();\n            });\n    };\n\n    return (\n        <div className=\"container\">\n            <div\n                id=\"saveCollage\"\n                className={gBackgroundColor + \" lighten-4\"}\n                style={{ background: gBackgroundColor, opacity: 0.8 }}\n            >\n                {placement === \"top\" ? (\n                    <div className=\"top-align\">\n                        <h1\n                            onChange={(updateText, updateFont)}\n                            style={{\n                                fontFamily: fontFam,\n                                color: fontColor,\n                                fontSize: \"2.5vw\",\n                            }}\n                            className=\"collageHeader\"\n                        >\n                            {text}\n                        </h1>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n                <div className=\"gallery\">\n                    {[...Array(4)].map((val, index) => {\n                        return (\n                            <figure\n                                key={index}\n                                id={`drag${index + 1}`}\n                                className={`gallery__item gallery__item--${\n                                    index + 1\n                                }`}\n                                onDrop={drop}\n                                onDragOver={allowDrop}\n                            ></figure>\n                        );\n                    })}\n                    {placement === \"center\" ? (\n                        <div\n                            className=\"gallery__item gallery__item--5 text-center p-centered\"\n                            style={{ margin: \"auto\", width: \"50%\" }}\n                        >\n                            <h4\n                                onChange={(updateText, updateFont)}\n                                style={{\n                                    fontFamily: fontFam,\n                                    color: fontColor,\n                                    fontSize: \"2.5vw\",\n                                }}\n                                className=\"collageHeader center-align text-center\"\n                            >\n                                {text}\n                            </h4>\n                        </div>\n                    ) : (\n                        <figure\n                            id=\"drag5\"\n                            className=\"gallery__item gallery__item--5\"\n                            onDrop={drop}\n                            onDragOver={allowDrop}\n                        />\n                    )}\n\n                    {[6, 7, 8].map((val, index) => {\n                        return (\n                            <figure\n                                key={val}\n                                id={`drag${val}`}\n                                className={`gallery__item gallery__item--${val}`}\n                                onDrop={drop}\n                                onDragOver={allowDrop}\n                            ></figure>\n                        );\n                    })}\n                </div>\n                {placement === \"bottom\" ? (\n                    <div className=\"bottom-align\">\n                        <h1\n                            onChange={(updateText, updateFont)}\n                            style={{\n                                fontFamily: fontFam,\n                                color: fontColor,\n                                fontSize: \"2.5vw\",\n                            }}\n                            className=\"collageHeader\"\n                        >\n                            {text}\n                        </h1>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n            </div>\n            <button className=\"btn btn-lg\" onClick={saveCollage}>Save Collage</button>\n        </div>\n    );\n};\n\nexport default Collage;\n","import React, { Component, useState } from \"react\";\n\nconst Photo = ({photo}) => {\n  const [pictureClicked, setPictureClicked] = useState(false);\n  const [pictureLeft, setPictureLeft] = useState(0);\n  const [pictureRight, setPictureRight] = useState(0);\n\n  const drag = event => {\n    console.log(\"drag\");\n    console.log(event);\n    event.dataTransfer.setData(\"text\", event.target.id);\n  };\n  const clickPhoto = event => {\n    console.log(event);\n    setPictureClicked(true);\n     event.currentTarget.className += \" active\";\n  }\n  const mouseDown = event => {\n    setPictureClicked(true);\n  }\n  const mouseMove = event => {\n    if (pictureClicked === true) {\n      console.log('mouseMove')\n      console.log(event)\n      event.currentTarget.style.left = event.pageX - pictureLeft;\n      event.currentTarget.style.right = event.pageX - pictureRight;\n\n    }\n    \n  }\n  const mouseUp = event => {\n    setPictureClicked(false);\n  }\n    return (\n      <img\n        className=\"fit-picture\"\n        key={photo[\"id\"]}\n        id={photo[\"id\"]}\n        src={photo[\"urls\"][\"thumb\"]}\n        draggable=\"true\"\n        onDragStart={drag}\n        alt={photo.alt_description}\n        onClick={clickPhoto}\n        onMouseDown={ mouseDown }\n        onMouseMove={ mouseMove }\n        onMouseUp={ mouseUp }\n      />\n    );\n}\n\n\nexport default Photo;\n","import React, { useEffect } from \"react\";\nimport Photo from \"./Photo\";\n\nconst Photos = ({pictures, noPictures, searchTerm, loadMore}) => {\n    console.log(pictures)\n    console.log(searchTerm)\n    return (\n      <div\n        className=\"photos-results card-panel indigo lighten-3\"\n        style={{  margin: '5px 0px', borderRadius: '5px' }}\n      >\n        \n          {pictures && pictures.length > 0 ? (\n            <div>\n              {pictures.map((pic, index) => (\n                <Photo key={pic.id+index} photo={pic} pictures={pictures}/>\n              ))}\n              {/* <button class=\"btn btn-lg\" onClick={loadMore}>Load More</button> */}\n            </div>\n        ) : (\n          <h2>{noPictures && searchTerm.length ? 'No results found for '+ searchTerm : 'No pictures yet'}</h2>\n        )}\n        <div class=\"empty\"></div>\n      </div>\n    );\n  }\n\n\nexport default Photos;\n","import React, { Component, useState, useEffect } from \"react\";\n// import Photos from \"./Photos\";\n// import Collage from \"./Collage\";\nimport GoogleFontLoader from \"react-google-font-loader\";\n\nconst LoadFont = () => (\n  <>\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: \"Roboto\",\n              weights: [400, \"400i\"]\n            },\n            {\n              font: \"Fjalla One\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Lobster\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Abel\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Fredoka One\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Varela Round\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Dancing Script\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Shadows Into Light\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Amatic SC\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Amiri\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Patua One\",\n              weights: [400, 700]\n            },\n            {\n              font: \"Permanent Marker\",\n              weights: [400, 700]\n            }\n          ]}\n          subsets={[\"cyrillic-ext\", \"greek\"]}\n        />\n  </>\n);\n\nexport default LoadFont;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component, useEffect, useState, Fragment }  from \"react\";\n\nfunction Dropdown({title, subTitle, updateFunction, array, category, ulId}) {\n    // updateFunction = updateFunction.bind(this);\n    console.log(updateFunction)\n\n    console.log(array)\n    // const arrObj = Object.keys(obj);\n  return (\n    <div className=\"row\">\n        {/* <p className=\"adjustment\">{title}</p> */}\n        <div className=\"dropdown\">\n            <div className=\"btn-group dropdown dropdown-content\">\n                <a\n                    href=\"#\"\n                    className=\"btn dropdown-toggle\"\n                    tabIndex=\"0\"\n                >\n                    {subTitle}\n                    <i className=\"icon icon-caret\"></i>\n                </a>\n                <ul\n                    id={ulId}\n                    className=\"menu dropdown-content\"\n                >\n                {\n                    array.map((ele) => \n                        <li\n                            role=\"option\"\n                            aria-selected=\"true\"\n                            onClick={updateFunction}\n                            id={ele.id}\n                            key={ele.id}\n                            data-value={ele.value}\n                            className=\"menu-item\"\n                            style={{\n                                fontFamily:\n                                    ((category === 'font') ? ele.value + \", monospaced\" : ''),\n\n                                backgroundColor: ((category === 'font-color') ? ele.value : '')\n                            }}\n                        >\n                            <div className=\"list-icon\">\n                                <a href=\"#dropdowns\">\n                                    {((category === 'font') ? ele.value : ele.id)}\n                                </a>\n                            </div>\n                        </li>                    \n                    )\n                }\n                </ul>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Dropdown;\n\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport Photos from \"./Photos\";\nimport Collage from \"./Collage\";\nimport LoadFont from \"./LoadFont\";\nimport axios from \"axios\";\nimport Dropdown from \"./Dropdown\";\nimport apiConfig from \"./apiKeys\";\nimport assetsList from \"./assetsList\";\n// import * from \"spectre.css\";\n\nfunction Search() {\n    const [pictures, setPictures] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const [noError, setNoError] = useState(true);\n    const [text, setText] = useState(\"\");\n    const [gBackgroundColor, setGBackgroundColor] = useState(\"lightgrey\");\n    const [fontColor, setFontColor] = useState(\"grey\");\n    const [placement, setPlacement] = useState(\"top\");\n    const [fontFam, setFontFam] = useState(\"\");\n    const [noPictures, setNoPictures] = useState(false);\n    const [page, setPage] = useState(1);\n    \n\n    const callAPI = (page, queryText) => {\n        axios\n            .get(\n                `https://api.unsplash.com/search/photos/?page=${page}&client_id=${apiConfig.unsplashAPIKey}&query=${queryText}`\n            )\n            .then((response) => {\n                console.log(response);\n                return response.data.results;\n            })\n            .then(\n                (jsonData) => {\n                    console.log(jsonData);\n                    let pictureObj = jsonData;\n                    let picturesArr = jsonData.map((picture) => {\n                        return picture[\"urls\"][\"small\"];\n                    });\n                    console.log(picturesArr);\n                    setPictures((page !== 1 && query === queryText) ? pictures.concat(pictureObj).filter((v,i,a)=>a.findIndex(t=>(t.id === v.id))===i) : pictureObj);\n                    setNoError(true);\n                    if (picturesArr.length === 0) {\n                      setNoPictures(true);\n                      setQuery(queryText);\n                    } \n                    setQuery(queryText);\n                },\n                (error) => {\n                    if (error) {\n                        alert(\"Warning\");\n                        alert(\"Pictures API loading requests too many\");\n                        setPictures([]);\n                        setNoError(true);\n                        setNoPictures(true);\n                    }\n                }\n            );\n    };\n\n    async function handleChange(query) {\n        if (query) {\n            setPage(1);\n            callAPI(page, query);\n        } else {\n            setPictures([]);\n            setQuery(query);\n            setNoError(true);\n        }\n    }\n\n    const updateText = (text) => {\n        if (text.length > 36) {\n            console.log(text.length);\n            alert(\"Can't enter more than 36 characters\");\n            return false;\n        }\n        setText(text);\n    };\n\n    const updateFont = (event) => {\n        console.log(\"updateFont\");\n        event.preventDefault();\n        console.log(event.currentTarget.id);\n        console.log(event.currentTarget.getAttribute('data-value'))\n        setFontFam(event.currentTarget.getAttribute('data-value'));\n    };\n\n    const updateBackgroundColor = (event) => {\n        console.log(\"updateBackgroundColor\");\n        event.preventDefault();\n        console.log(event.currentTarget.id);\n        console.log(gBackgroundColor)\n        setGBackgroundColor(event.currentTarget.getAttribute('data-value'));\n    };\n\n    const updateFontColor = (event) => {\n        console.log(\"updateFontColor\");\n        event.preventDefault();\n        console.log(event.currentTarget.id);\n        setFontColor(event.currentTarget.getAttribute('data-value'));\n    };\n\n    const updatePlacement = (event) => {\n        console.log(\"updatePlacement\");\n        event.preventDefault();\n        console.log(event.currentTarget.id);\n        setPlacement(event.currentTarget.id);\n    };\n\n    const loadMore = () => {\n        // alert('Laoding more')\n        // alert(page);\n        // alert(query);\n        setPage(page+1);\n        // console.log('pictures')\n        // console.log(pictures)\n        const allImgs = document.querySelectorAll('div.photos-results img');\n        const lastImagePlacement = allImgs.length-1;\n        callAPI(page+1, query);\n        // console.log('!pics!')\n\n        // console.log(pictures)\n        // console.log(lastImagePlacement)\n        const totalImagesLoaded = document.querySelectorAll('div.photos-results img');\n        console.log(totalImagesLoaded[lastImagePlacement]);\n        totalImagesLoaded[lastImagePlacement].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n    }\n\n    useEffect(() => {\n        if (\n            placement === \"center\" &&\n            document.getElementsByClassName(\"text-center\")[0] !== undefined\n        ) {\n            document.getElementsByClassName(\n                \"text-center\"\n            )[0].style.backgroundImage = \"\";\n        }\n        console.log('pictures23');\n        console.log(pictures);\n    }, []);\n\n    function updatePhotosSearch(photo) {\n        console.log(photo);\n        console.log(pictures);\n        const currentPictures = [...pictures];\n        console.log(currentPictures);\n\n        const photosSplit = () => {\n            currentPictures.map((picture, currIndex) => {\n                if (picture.id === photo) {\n                    return currentPictures.splice(currIndex, 1);\n                }\n                return null;\n            });\n        };\n\n        photosSplit();\n        setPictures(currentPictures);\n    }\n\n    return (\n        <div className=\"main-app\">\n            <LoadFont />\n            <p className=\"messageMobile\">Not mobile-friendly. Please use desktop version.</p>\n            <div className=\"search-photos\">\n                <div className=\"section-main\">\n                    <div className=\"row form-group\">\n                        <div className=\"input-field col s12\">\n                            <label className=\"active form-label\" htmlFor=\"greeting_text\">\n                                <h2>Enter Text</h2>\n                            </label>\n                            <input\n                                id=\"greeting_text\"\n                                name=\"greeting_text\"\n                                type=\"text\"\n                                className=\"validate form-input\"\n                                value={text}\n                                onChange={(e) => updateText(e.target.value)}\n                                placeholder=\"Add Text Here.\"\n                            />\n                        </div>\n                    </div>\n                    <Dropdown \n                      title='Greeting Text Alignment'\n                      subTitle='Text Alignment'\n                      updateFunction={updatePlacement}\n                      array={assetsList.alignment}\n                      ulId=\"dropdown4\"\n                      category='text'\n                    />\n\n                    <Dropdown \n                      title='Font Style Adjustment'\n                      subTitle='Font Style'\n                      updateFunction={updateFont}\n                      array={assetsList.getFonts}\n                      category='font'\n                      ulId=\"dropdown1\"\n                    />\n\n                    <Dropdown \n                      title='Font Color Adjustment'\n                      subTitle='Font Color'\n                      updateFunction={updateFontColor}\n                      array={assetsList.fontColorsList}\n                      category='font-color'\n                      ulId=\"dropdown3\"\n                    />\n\n                    <Dropdown \n                      title='Background Color Adjustment'\n                      subTitle='Background Color'\n                      updateFunction={updateBackgroundColor}\n                      array={assetsList.backgroundColorsList}\n                      category='font-color'\n                      ulId=\"dropdown2\"\n                    />\n\n                    <div className=\"search-books-input-wrapper form-group\">\n                        <label className=\"active form-label\" htmlFor=\"adding_photos_text\">\n                            <h2>Add Photos.</h2>\n                            Simply drag and drop the photos to the\n                            collage.\n                            <br/>\n                            Search by relevance of pictures\n                            <br/>\n                        </label>\n                        <input\n                            type=\"text\"\n                            onChange={(e) => handleChange(e.target.value)}\n                            placeholder=\"Search Pictures\"\n                            className=\"form-input\"\n                            id=\"adding_photos_text\"\n                        />\n                    </div>\n                </div>\n\n                <Photos pictures={pictures} searchTerm={query} noPictures={noPictures} loadMore={loadMore}/>\n            </div>\n            <Collage\n                updatePhotosSearch={updatePhotosSearch}\n                text={text}\n                fontFam={fontFam}\n                gBackgroundColor={gBackgroundColor}\n                fontColor={fontColor}\n                placement={placement}\n                updateText={updateText}\n                updateFont={updateFont}\n            />\n        </div>\n    );\n}\n\nexport default Search;\n","import React, { Component, useEffect, useState, Fragment }  from \"react\";\nimport Collage from \"./Collage\";\nimport Search from \"./Search\";\nimport \"./stylesheet/App.css\";\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n        <header className=\"navbar\">\n          <section className=\"navbar-section\">\n           \n          </section>\n          <section className=\"navbar-center\">\n            Create Your Photo Collage\n          </section>\n          {/* <section className=\"navbar-section\">\n            Made by Sushma\n          </section> */}\n        </header>\n        <Search/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}